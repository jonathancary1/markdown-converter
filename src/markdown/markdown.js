import Root from './nodes/root';

// all contiguous substrings of non-whitespace characters are yielded
// the row and column values of the start of the substring are yielded as well
function* tokenize(markdown) {
  let index = {row: 0, column: 0};
  let i = 0;
  let re = /\S+|\n/g;
  let match;
  while ((match = re.exec(markdown)) !== null) {
    let [value] = match;
    if (value === '\n') {
      index = {row: index.row + 1, column: -1};
      i = match.index;
    } else {
      index = {row: index.row, column: index.column + match.index - i};
      i = match.index;
      yield {index, value};
    }
  }
}

// returns the abstract syntax tree representation of markdown
function parseMarkdown(markdown) {
  let root = new Root();
  for (let token of tokenize(markdown)) {
    root.push(token);
  }
  return root;
}

// returns formatted HTML generated by the string markdown
function markdownToHTML(markdown) {
  return parseMarkdown(markdown).html();
}

export { parseMarkdown, markdownToHTML };
